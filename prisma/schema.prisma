generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  password      String
  role          Role       @default(REGULAR)
  basket        Basket?
  rating        Rating?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime?   @updatedAt
}

model Basket {
  id              Int                @id @default(autoincrement())
  userId          Int                @unique
  user            User               @relation(fields: [userId], references: [id])
  devices         DevicesInBaskets[]
  createdAt       DateTime           @default(now())
  updatedAt       DateTime?           @updatedAt
}

model Device {
  id              Int                 @id @default(autoincrement())
  name            String              @unique
  description     String?
  price           Int
  deviceRating    Int                 @default(0)
  img             String[]
  baskets         DevicesInBaskets[]
  rating          Rating?
  brandId         Int
  brand           Brand               @relation(fields: [brandId], references: [id])
  categoriesId    Int
  categories      Categories          @relation(fields: [categoriesId], references: [id])
  createdAt       DateTime            @default(now())
  updatedAt       DateTime?           @updatedAt
}

model DevicesInBaskets {
  id            Int           @id @default(autoincrement())
  basketId      Int           @unique
  basket        Basket        @relation(fields: [basketId], references: [id])
  deviceId      Int           @unique
  device        Device        @relation(fields: [deviceId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt

  @@unique([basketId, deviceId])
}

model Brand {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  CategoriesAndBrand    CategoriesAndBrand[]
  devices               Device[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime?             @updatedAt
}

model Rating {
  id              Int             @id @default(autoincrement())
  rate            Int
  user            User            @relation(fields:[userId],references:[id])
  userId          Int
  device          Device          @relation(fields:[deviceId],references:[id])
  deviceId        Int
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?       @updatedAt

  @@unique([userId, deviceId])
}
model Categories {
  id                      Int                   @id @default(autoincrement())
  name                    String                @unique
  CategoriesAndBrand      CategoriesAndBrand[]
  parentId                Int
  devices                 Device[]
  createdAt               DateTime              @default(now())
  updatedAt               DateTime?             @updatedAt
}

model CategoriesAndBrand {
  id              Int             @id @default(autoincrement())
  categoriesId    Int             @unique
  categories      Categories      @relation(fields:[categoriesId],references:[id])
  brandId         Int             @unique
  brand           Brand           @relation(fields:[brandId],references:[id])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?       @updatedAt

  @@unique([categoriesId, brandId])
}

enum Role {
  ADMIN
  REGULAR
}
